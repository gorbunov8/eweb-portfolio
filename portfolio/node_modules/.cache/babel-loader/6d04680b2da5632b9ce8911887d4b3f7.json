{"ast":null,"code":"var _jsxFileName = \"/Users/tech9/STASH/DevOps(projects)/bfh/eweb-portfolio/portfolio/src/components/Home/Header/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchScreen(i, Screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this));\n  };\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-separator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadcaster","subscribe","getHeaderOptions","map","Screen","i","getHeaderOptionsClasses","switchScreen","screen_name","getHeaderOptionsClass","index","classes","length","screen","screenComponent","document","getElementById","scrollIntoView","behavior"],"sources":["/Users/tech9/STASH/DevOps(projects)/bfh/eweb-portfolio/portfolio/src/components/Home/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TOTAL_SCREENS,\n  GET_SCREEN_INDEX,\n} from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = (currentScreen) => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription =\n    ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => (\n      <div\n        key={Screen.screen_name}\n        className={getHeaderOptionsClasses(i)}\n        onClick={() => switchScreen(i, Screen)}\n      >\n        <span>{Screen.screen_name}</span>\n      </div>\n    ));\n  };\n\n  const getHeaderOptionsClass = (index) => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-separator\";\n\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index,screen) => {\n    let screenComponent = document.getElementById(screen.screen_name)\n    if(!screenComponent)\n    return\n\n    screenComponent.scrollIntoView({behavior: \"smooth\"})\n    setSelectedScreen(index)\n  }\n\n  return <div></div>;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,aAAa,EACbC,gBAAgB,QACX,gCAAgC;AACvC,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,cAAc;AAAC;AAEtB,eAAe,SAASC,MAAM,GAAG;EAAA;EAC/B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMY,mBAAmB,GAAIC,aAAa,IAAK;IAC7C,IAAI,CAACA,aAAa,IAAI,CAACA,aAAa,CAACC,YAAY,EAAE;IAEnD,IAAIC,WAAW,GAAGZ,gBAAgB,CAACU,aAAa,CAACC,YAAY,CAAC;IAC9D,IAAIC,WAAW,GAAG,CAAC,EAAE;EACvB,CAAC;EACD,IAAIC,yBAAyB,GAC3BZ,aAAa,CAACa,wBAAwB,CAACC,SAAS,CAACN,mBAAmB,CAAC;EAEvE,MAAMO,gBAAgB,GAAG,MAAM;IAC7B,OAAOjB,aAAa,CAACkB,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACjC;MAEE,SAAS,EAAEC,uBAAuB,CAACD,CAAC,CAAE;MACtC,OAAO,EAAE,MAAME,YAAY,CAACF,CAAC,EAAED,MAAM,CAAE;MAAA,uBAEvC;QAAA,UAAOA,MAAM,CAACI;MAAW;QAAA;QAAA;QAAA;MAAA;IAAQ,GAJ5BJ,MAAM,CAACI,WAAW;MAAA;MAAA;MAAA;IAAA,QAM1B,CAAC;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;IACvC,IAAIC,OAAO,GAAG,eAAe;IAC7B,IAAID,KAAK,GAAGzB,aAAa,CAAC2B,MAAM,GAAG,CAAC,EAAED,OAAO,IAAI,yBAAyB;IAE1E,IAAIpB,cAAc,KAAKmB,KAAK,EAAEC,OAAO,IAAI,wBAAwB;IACjE;EACF,CAAC;EAED,MAAMJ,YAAY,GAAG,CAACG,KAAK,EAACG,MAAM,KAAK;IACrC,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAACH,MAAM,CAACL,WAAW,CAAC;IACjE,IAAG,CAACM,eAAe,EACnB;IAEAA,eAAe,CAACG,cAAc,CAAC;MAACC,QAAQ,EAAE;IAAQ,CAAC,CAAC;IACpD1B,iBAAiB,CAACkB,KAAK,CAAC;EAC1B,CAAC;EAED,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB;AAAC,GA3CuBpB,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module"}